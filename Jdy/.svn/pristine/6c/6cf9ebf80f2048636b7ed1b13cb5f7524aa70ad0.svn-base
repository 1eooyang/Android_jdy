package com.app.jdy.ui;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.ViewGroup;
import android.webkit.WebSettings;
import android.webkit.WebSettings.LayoutAlgorithm;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ImageView;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.ant.liao.GifView;
import com.app.jdy.R;
import com.app.jdy.adapter.DetailAdapter;
import com.app.jdy.utils.BitmapUtils;
import com.app.jdy.utils.CommonUtils;
import com.app.jdy.utils.Constants;
import com.app.jdy.utils.HttpUtils;
import com.app.jdy.utils.URLs;
import com.app.jdy.utils.WxUtil;
import com.app.jdy.widget.CustomForwardDialog;
import com.app.jdy.widget.CustomSaveMoneyDialog;
import com.app.jdy.widget.WaitingDialog;
import com.tencent.mm.sdk.openapi.IWXAPI;
import com.tencent.mm.sdk.openapi.SendMessageToWX;
import com.tencent.mm.sdk.openapi.WXAPIFactory;
import com.tencent.mm.sdk.openapi.WXMediaMessage;
import com.tencent.mm.sdk.openapi.WXWebpageObject;

/**
 * 
 * description :
 * 
 * @version 1.0
 * @author zhoufeng
 * @createtime : 2015-1-10 下午4:13:10
 * 
 *             修改历史: 修改人 修改时间 修改内容 --------------- -------------------
 *             ----------------------------------- zhoufeng 2015-1-10 下午4:13:10
 * 
 */
public class DetailActivity extends BaseActivity implements OnClickListener {
	/**
	 * 返回按钮
	 */
	private ImageView mBackImg;
	/**
	 * 购买按钮
	 */
	private ImageView buy;
	/**
	 * 分享按钮
	 */
	private ImageView share;
	/**
	 * 标题
	 */
	private TextView title;
	/**
	 * 产品详情的listview
	 */
	private ListView listView;
	/**
	 * 产品详情的json数据
	 */
	private String dataJson;
	/**
	 * handler
	 */
	private Handler handler;
	/**
	 * 进度条的标示
	 */
	private final int PROGRESS_DIALOG = 0x112;
	/**
	 * 进度条
	 */
	private ProgressDialog pd;
	/**
	 * 产品详情的webview
	 */
	private WebView webView;
	/**
	 * 预计最高收益率 文本框
	 */
	private TextView ExpeAnnuRevnue_TextView;
	/**
	 * 超购金额的文本框
	 */
	private TextView MinSubsAmount_TextView;
	/**
	 * 产品的ID号
	 */
	private String id;
	/**
	 * 产品的类型
	 */
	private String code;
	/**
	 * 预计最高收益率
	 */
	private String ExpeAnnuRevnue;
	/**
	 * 超购金额
	 */
	private String MinSubsAmount;
	/**
	 * 产品名称
	 */
	private String name;
	
	private String proType;//产品类型(用于产品标识图标的textview显示)
	/**
	 * 微信API
	 */
	private IWXAPI api;
	private String shareSubject;
	private String productSubject;

	JSONObject jsonObject;

	JSONObject product;

	Bitmap logo;

	Bitmap prodImage;
	private TextView type_textview;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_detail);
		setGuideResourceId(R.drawable.guide_test);
		initView();

		buy.setOnClickListener(this);
		mBackImg.setOnClickListener(this);
		share.setOnClickListener(this);
	}

	/**
	 * 初始化组件
	 */
	public void initView() {
		type_textview = (TextView) findViewById(R.id.type_textview);
		buy = (ImageView) findViewById(R.id.buy_img);
		buy.setVisibility(View.VISIBLE);
		share = (ImageView) findViewById(R.id.share_img);
		share.setVisibility(View.VISIBLE);
		mBackImg = (ImageView) findViewById(R.id.back_img);
		mBackImg.setVisibility(View.VISIBLE);
		WaitingDialog.showDialog(DetailActivity.this);
		listView = (ListView) findViewById(R.id.detailListView);
		title = (TextView) findViewById(R.id.title_tv);

		ExpeAnnuRevnue_TextView = (TextView) findViewById(R.id.ExpeAnnuRevnue);
		MinSubsAmount_TextView = (TextView) findViewById(R.id.MinSubsAmount);

		id = getIntent().getExtras().getString("ID");
		code = getIntent().getExtras().getString("prodTypeCode");
		ExpeAnnuRevnue = getIntent().getExtras().getString("ExpeAnnuRevnue");
		MinSubsAmount = getIntent().getExtras().getString("MinSubsAmount");
		shareSubject = getIntent().getExtras().getString("shareSubject");
		productSubject = getIntent().getExtras().getString("productSubject");
		proType=getIntent().getExtras().getString("proType");
		
		
		type_textview.setText(proType);
		ExpeAnnuRevnue_TextView.setText(ExpeAnnuRevnue + "%");
		MinSubsAmount_TextView.setText(MinSubsAmount);
		name = getIntent().getExtras().getString("name");
		title.setText(name);
		api = WXAPIFactory.createWXAPI(this, Constants.APP_ID);

		getDetailData();
		
	}
	
	/**
	 * 获取详情webview数据
	 */
	public void getWebviewData(){
		webView = (WebView) findViewById(R.id.detail_webview);
		/*
		 * webView.getSettings().setDefaultTextEncodingName("UTF -8");
		 * webView.loadData(
		 * "<span style=\"font-size:28px;\"><strong><span style=\"background-color:#ffd700;\">测试机构介绍。。。</span></strong></span>"
		 * , "text/html; charset=UTF-8", null);
		 */
		WebSettings settings = webView.getSettings(); 
//		settings.setUseWideViewPort(true); 
//        settings.setLoadWithOverviewMode(true); 
		settings.setSupportZoom(true);
		settings.setLayoutAlgorithm(LayoutAlgorithm.NARROW_COLUMNS);
		webView.loadUrl(URLs.PROUDCT_DETAIL_WEBVIEW + id);
		
		webView.setWebViewClient(new WebViewClient() {

			// return true才能让Webview里面的链接不去调用浏览器
			@Override
			public boolean shouldOverrideUrlLoading(WebView view, String url) {
				view.loadUrl(url);
				return false;
			}
		});
		webView.setOnLongClickListener(new OnLongClickListener() {

			@Override
			public boolean onLongClick(View v) {
				return true;
			}
		});
	}

	/**
	 * 获取详情列表的数据
	 */
	public void getDetailData() {
		handler = new Handler() {
			public void handleMessage(Message msg) {
				Log.v("json数据", "=======" + dataJson);
				switch (msg.what) {
				case 1:
					listView.setAdapter(new DetailAdapter(DetailActivity.this, R.layout.detail_item, dataJson, logo,
							prodImage));
					setListViewHeightBasedOnChildren(listView);
					getWebviewData();
					WaitingDialog.dismissDialog();
					break;

				default:
					break;
				}
			}
		};
		Thread thread = new Thread(new Runnable() {

			@Override
			public void run() {
				Message msg = new Message();
				dataJson = HttpUtils.request(null, URLs.PROUDCT_DETAIL + id + "-" + code);
				try {
					jsonObject = new JSONObject(dataJson);
//					product = new JSONObject(jsonObject.getString("product1"));
//					if (product.getString("issuerLogo").equals("null")) {
//						logo = null;
//					} else {
//						logo = BitmapUtils.getBitmap(URLs.HTTP + URLs.HOST + product.getString("issuerLogo"),
//								URLs.TEMP_DIR + File.separator + "pic", DetailActivity.this);
//					}
//					if (product.getString("prodImage").equals("null")) {
//						prodImage = null;
//					} else {
//						prodImage = BitmapUtils.getBitmap(URLs.HTTP + URLs.HOST + product.getString("prodImage"),
//								URLs.TEMP_DIR + File.separator + "pic", DetailActivity.this);
//					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
				msg.what = 1;
				handler.sendMessage(msg);
			}
		});
		thread.start();
	}

	/*
	 * 动态设置ListView组建的高度
	 */
	public void setListViewHeightBasedOnChildren(ListView listView) {
		ListAdapter listAdapter = listView.getAdapter();
		if (listAdapter == null) {
			return;
		}
		int totalHeight = 0;
		for (int i = 0; i < listAdapter.getCount(); i++) {
			View listItem = listAdapter.getView(i, null, listView);
			listItem.measure(0, 0);
			totalHeight += listItem.getMeasuredHeight();
		}
		ViewGroup.LayoutParams params = listView.getLayoutParams();
		params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
		listView.setLayoutParams(params);
	}

	/**
	 * 
	 * @author zhoufeng
	 * @createtime 2015-1-22 上午1:59:43
	 * @Decription 获取用户的memberId，产品的code和产品的ID号进行分享
	 * 
	 */
	public void shareDetail() {
		SharedPreferences userPreferences = getSharedPreferences("umeng_general_config", Context.MODE_PRIVATE);
		String jdycode = userPreferences.getString("jdycode", null);
		// 进行判断用户是否已经登录，没登陆返回登录界面，有登陆可以操作分享的功能

		if (jdycode != null) {
			String memberID = userPreferences.getString("ID", "").trim();
			// new MyAsyncTask(id, memberID, code).execute();
			Map<String, String> map = new HashMap<String, String>();
			map.put("name", "test");
			map.put("ID", id);
			map.put("prodTypeCode", code);
			map.put("memberId", memberID);
			map.put("shareSubject", shareSubject);
			map.put("productSubject", productSubject);
			CustomForwardDialog customForwardDialog = new CustomForwardDialog(this, R.style.ForwardDialog, map, false);
			customForwardDialog.show();
		} else {
			startActivity(new Intent(DetailActivity.this, LoginActivity.class));
		}

	}

	/**
	 * 
	 * 重写方法: onCreateDialog|描述:进度条的框
	 * 
	 * @param id
	 * @param status
	 * @return
	 * @see android.app.Activity#onCreateDialog(int, android.os.Bundle)
	 */
	protected Dialog onCreateDialog(int id, Bundle status) {
		if (id == PROGRESS_DIALOG) {
			pd.setMessage("正在提交...");
		}
		return pd;
	}

	/**
	 * 
	 * 重写方法: onClick|描述: 点击事件
	 * 
	 * @param v
	 * @see android.view.View.OnClickListener#onClick(android.view.View)
	 */
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.back_img:
			// 返回按钮
			this.finish();
			break;
		case R.id.share_img:
			shareDetail();
			break;
		case R.id.buy_img:
			showBuyDialog();
			break;
		default:
			break;
		}
	}

	/**
	 * 
	 * @author Owater
	 * @createtime 2015-1-29 下午2:23:02
	 * @Decription 弹出省钱对话框
	 * 
	 */
	private void showBuyDialog() {
		if (CommonUtils.checkLogin(this)) {
			SharedPreferences userPreferences = getSharedPreferences("umeng_general_config", Context.MODE_PRIVATE);
			String memberID = userPreferences.getString("ID", "").trim();
			Map<String, String> map = new HashMap<String, String>();
			map.put("ID", id);
			map.put("memberId", memberID);
			CustomSaveMoneyDialog customSaveMoneyDialog = new CustomSaveMoneyDialog(this, R.style.ForwardDialog, map);
			customSaveMoneyDialog.show();
		} else {
			startActivity(new Intent(DetailActivity.this, LoginActivity.class));
		}
	}

	/**
	 * 
	 * @author Owater
	 * @createtime 2015-1-25 下午4:14:15
	 * @Decription 微信发送
	 * 
	 * @param id
	 */
	private void sendUrl(String rid) {
		WXWebpageObject webpage = new WXWebpageObject();
		webpage.webpageUrl = URLs.WX_SHARE_RESULT_URL + "/" + id + "-" + code + "-" + rid;
		// Log.i("url", URLs.WX_SHARE_RESULT_URL+"/"+id+"-"+code+"-"+rid);
		Toast.makeText(DetailActivity.this, URLs.WX_SHARE_RESULT_URL + "/" + id + "-" + code + "-" + rid,
				Toast.LENGTH_LONG).show();
		WXMediaMessage msg = new WXMediaMessage(webpage);
		msg.title = name;
		msg.description = "产品描述";
		Bitmap thumb = BitmapFactory.decodeResource(getResources(), R.drawable.test2);
		msg.thumbData = WxUtil.bmpToByteArray(thumb, true);

		SendMessageToWX.Req req = new SendMessageToWX.Req();
		req.transaction = buildTransaction("webpage");
		req.message = msg;
		// req.scene = isTimelineCb.isChecked() ?
		// SendMessageToWX.Req.WXSceneTimeline :
		// SendMessageToWX.Req.WXSceneSession;
		req.scene = SendMessageToWX.Req.WXSceneTimeline;
		api.sendReq(req);
	}

	private String buildTransaction(final String type) {
		return (type == null) ? String.valueOf(System.currentTimeMillis()) : type + System.currentTimeMillis();
	}

	/**
	 * 
	 * description : 异步网络请求
	 * 
	 * @version 1.0
	 * @author Owater
	 * @createtime : 2015-1-20 上午4:22:27
	 * 
	 *             修改历史: 修改人 修改时间 修改内容 --------------- -------------------
	 *             ----------------------------------- Owater 2015-1-20
	 *             上午4:22:27
	 * 
	 */
	private class MyAsyncTask extends AsyncTask<Void, Integer, Boolean> {

		private ArrayList<NameValuePair> params;
		private String resultid;
		private String memberId;// 会员ID
		private String productId;// 产品ID
		private String type;// 产品类型

		public MyAsyncTask(String productId, String memberId, String type) {
			this.memberId = memberId;
			this.type = type;
			this.productId = productId;
		}

		@Override
		protected Boolean doInBackground(Void... arg0) {
			params = new ArrayList<NameValuePair>();
			params.add(new BasicNameValuePair("parentId", ""));
			params.add(new BasicNameValuePair("productId", productId));
			params.add(new BasicNameValuePair("memberId", memberId));
			resultid = HttpUtils.request(params, URLs.WX_SHARE_URL);
			try {
				JSONObject jsonObject = new JSONObject(resultid);
				resultid = jsonObject.getString("ID");
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return true;
		}

		@Override
		protected void onPostExecute(Boolean result) {
			if (result) {
				Toast.makeText(DetailActivity.this, "resultid=" + resultid, Toast.LENGTH_LONG).show();
				sendUrl(resultid);
			} else {
				// Toast.makeText(HomeActivity.this, "网络请求失败",
				// Toast.LENGTH_SHORT).show();
			}
		}

	}
}
