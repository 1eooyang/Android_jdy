package com.app.jdy.ui;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.Toast;

import com.app.jdy.R;
import com.app.jdy.adapter.GradeAdapter;
import com.app.jdy.entity.Grade;
import com.app.jdy.utils.BitmapUtils;
import com.app.jdy.utils.HttpUtils;
import com.app.jdy.utils.URLs;
import com.app.jdy.utils.UploadUtil;
import com.app.jdy.utils.UploadUtil.OnUploadProcessListener;
import com.app.jdy.widget.CommonDialog;
import com.app.jdy.widget.GradeDialog;
import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener;
import com.handmark.pulltorefresh.library.PullToRefreshScrollView;

/**
 * 
 * description :我的Fragment
 * 
 * @version 1.0
 * @author zhonghuixiong
 * @createtime : 2015-1-13 下午7:39:37
 * 
 *             修改历史: 修改人 修改时间 修改内容 --------------- -------------------
 *             ----------------------------------- zhonghuixiong 2015-1-13
 *             下午7:39:37
 * 
 */
//@SuppressLint("NewApi")
//public class MyFragment extends Fragment implements OnUploadProcessListener {
//	/**
//	 * 初始化控件
//	 */
//
//	private Activity mActivity;
//	private LayoutInflater mLayoutInflater;
//	private View view;
//	/**
//	 * 用户名称
//	 */
//	private TextView user_name;
//	/**
//	 * 头像
//	 */
//	private RoundAngleImageView user_head;
//	/**
//	 * 用户等级
//	 */
//	private TextView user_grade;
//	/**
//	 * 用户积分
//	 */
//	private TextView user_score;
//	/**
//	 * 用户余额
//	 */
//	private TextView account_balance;
//	/**
//	 * 绑定银行卡
//	 */
//	private TextView bank_card_tips;
//	/**
//	 * 我的面值的显示金钱
//	 */
//	private TextView face_value_tips;
//	/**
//	 * 我的面子的显示数字组件
//	 */
//	private TextView ring_tips;
//	/**
//	 * 我的圈子的显示数字组件
//	 */
//	private TextView face_tips;
//	/**
//	 * 我的订单的显示数字组件
//	 */
//	private TextView order_tips;
//	/**
//	 * 我的面值的点击范围
//	 */
//	private RelativeLayout click_face_value;
//	/**
//	 * 我的面子的点击范围
//	 */
//	private RelativeLayout my_face;
//	/**
//	 * 我的圈子的点击事件
//	 */
//	private RelativeLayout my_community_click;
//	/**
//	 * 我的订单的点击范围
//	 */
//	private RelativeLayout my_order_relativelayout;
//	/**
//	 * 设置的点击范围
//	 */
//	private RelativeLayout setting;
//	/**
//	 * handler变量
//	 */
//	private Handler handler;
//	/**
//	 * 服务器的json数据
//	 */
//	private String datajson;
//	/**
//	 * 服务器的json数据
//	 */
//	private String datajson1;
//	/**
//	 * 用户的 ID号
//	 */
//	private String ID;
//	/**
//	 * 发送的数据
//	 */
//	private ArrayList<NameValuePair> params;
//	/**
//	 * 提现点击范围
//	 */
//	private RelativeLayout balance_click;
//	/**
//	 * 提现记录组件
//	 */
//	private TextView balance_tips;
//	/**
//	 * 消息列表
//	 */
//	private RelativeLayout msgLinLayout;
//	/**
//	 * 我的消息的组件
//	 */
//	private TextView my_test_tips;
//
//	private TextView user_score_text;
//
//	private TextView user_grade_text;
//
//	private String gradeJson;
//
//	/******** 状态码区域 ********/
//	public static final int SELECT_PIC_BY_TACK_PHOTO = 11;// 使用照相机拍照获取图片
//
//	public static final int SELECT_PIC_BY_PICK_PHOTO = 12;// 使用相册中的图片
//
//	public static final int CROP_PHOTO = 13;// 裁剪完成
//
//	/******** 变量区域 ********/
//	private Bitmap bm;
//	private String tempName; // 头像原图临时文件名
//	private String smallTempName;// 头像裁剪图临时文件名
//	private View customView;
//	/**
//	 * 下拉刷新
//	 */
//	private PullToRefreshScrollView mPullRefreshScrollView;
//	private ScrollView mScrollView;
//	private Dialog dialog;
//
//	@Override
//	public void onCreate(Bundle savedInstanceState) {
//		super.onCreate(savedInstanceState);
//		dialog = new Dialog(getActivity(), R.style.ForwardDialog);
//		dialog.setContentView(R.layout.r_okcanceldialogview);
//		dialog.setCanceledOnTouchOutside(true);
//	}
//
//	@Override
//	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
//		mLayoutInflater = inflater;
//		view = inflater.inflate(R.layout.activity_my, null, false);
//		return view;
//	}
//
//	@Override
//	public void onViewCreated(View view, Bundle savedInstanceState) {
//		handler = new Handler() {
//			private String portrait;
//			private String localPath;
//
//			@Override
//			public void handleMessage(Message msg) {
//				switch (msg.what) {
//				case 0:
//					break;
//				case 1:
//					try {
//						JSONObject jsonObject = new JSONObject(datajson);
//
//						if (jsonObject.getString("name").equals("null")) {
//							user_name.setText("未命名");
//						} else {
//							user_name.setText(jsonObject.getString("name"));
//						}
//						if (jsonObject.getString("rankName").equals("null")) {
//							user_grade.setText("0");
//						} else {
//							user_grade.setText(jsonObject.getString("rankName"));
//						}
//						if (jsonObject.getString("creditBalance").equals("null")) {
//							user_score.setText("0");
//						} else {
//							user_score.setText(jsonObject.getString("creditBalance"));
//						}
//						if (jsonObject.getString("accountBalance").equals("null")) {
//							account_balance.setText("￥0");
//						} else {
//							account_balance.setText("￥" + jsonObject.getString("accountBalance"));
//						}
//						if (jsonObject.getString("sum").equals("null")) {
//							face_value_tips.setText("￥0");
//						} else {
//							face_value_tips.setText("￥" + jsonObject.getString("sum"));
//						}
//						if (jsonObject.getString("faceSum").equals("null")) {
//							face_tips.setText("0人");
//						} else {
//							face_tips.setText(jsonObject.getString("faceSum") + "人");
//						}
//						if (jsonObject.getString("communitySum").equals("null")) {
//							ring_tips.setText("0人");
//						} else {
//							ring_tips.setText(jsonObject.getString("communitySum") + "人");
//						}
//						if (jsonObject.getString("orderSum").equals("null")) {
//							order_tips.setText("￥0");
//						} else {
//							order_tips.setText("￥" + jsonObject.getString("orderSum"));
//						}
//						localPath = URLs.TEMP_DIR + File.separator + ID + ".jpg";
//						portrait = null;
//						if (jsonObject.getString("portrait").equals("null")) {
//						} else {
//							portrait = jsonObject.getString("portrait");
//
//						}
//						Thread thread = new Thread(new Runnable() {
//							@Override
//							public void run() {
//								Message msg = new Message();
//								bm = BitmapUtils.getBitmap(portrait, localPath, getActivity());
//								if (bm != null) {
//									msg.what = 11;
//								} else {
//									msg.what = 12;
//								}
//
//								handler.sendMessage(msg);
//							}
//						});
//						thread.start();
//					} catch (JSONException e) {
//						e.printStackTrace();
//					}
//					break;
//				case 2:
//					if (datajson1.equals("false")) {
//						my_test_tips.setText("0条");
//					} else {
//						my_test_tips.setText(datajson1 + "条");
//					}
//					break;
//				case 3:
//					List<Grade> list = new ArrayList<Grade>();
//					try {
//						JSONArray jsonArray = new JSONArray(gradeJson);
//						for (int i = 0; i < jsonArray.length(); i++) {
//							Grade grade = new Grade();
//							grade.setGrade(jsonArray.getJSONObject(i).getString("name"));
//							grade.setScore(jsonArray.getJSONObject(i).getString("exp"));
//							list.add(grade);
//						}
//						GradeAdapter gradeAdapter = new GradeAdapter(getActivity(), R.layout.grade_item, list);
//						GradeDialog gradeDialog = new GradeDialog(getActivity(), R.style.ForwardDialog, gradeAdapter);
//						gradeDialog.show();
//					} catch (JSONException e) {
//						e.printStackTrace();
//					}
//					break;
//				case 11:
//					user_head.setImageBitmap(bm);
//					break;
//				case 12:
//					break;
//				default:
//					break;
//				}
//			}
//		};
//		initView();
//
//		getData();
//
//		getMyMessage();
//		mPullRefreshScrollView.setOnRefreshListener(new OnRefreshListener<ScrollView>() {
//
//			@Override
//			public void onRefresh(PullToRefreshBase<ScrollView> refreshView) {
//				new GetMsgDataTask().execute();
//			}
//		});
//		click_face_value.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				startActivity(new Intent(getActivity(), FaceValueActivity.class));
//			}
//		});
//		balance_click.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				startActivity(new Intent(getActivity(), CashAdvanceActivity.class));
//			}
//		});
//		balance_tips.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				startActivity(new Intent(getActivity(), MyRecordActivity.class));
//			}
//		});
//		bank_card_tips.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				Intent intent = new Intent(getActivity(), BankCardActivity.class);
//				Bundle bundle = new Bundle();
//				bundle.putBoolean("isOk", false);
//				intent.putExtras(bundle);
//				startActivity(intent);
//			}
//		});
//		my_face.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				startActivity(new Intent(getActivity(), MyFaceActivity.class));
//			}
//		});
//		my_order_relativelayout.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				startActivity(new Intent(getActivity(), MyOrderActivity.class));
//			}
//		});
//		my_community_click.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				startActivity(new Intent(getActivity(), MyCommunityActivity.class));
//			}
//		});
//		setting.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				Intent intent1 = new Intent(getActivity(), SettingActivity.class);
//				Bundle bundle1 = new Bundle();
//				bundle1.putString("username", user_name.getText().toString());
//				intent1.putExtras(bundle1);
//				startActivityForResult(intent1, 1);
//
//			}
//		});
//		msgLinLayout.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				Intent intent2 = new Intent(getActivity(), MsgListActivity.class);
//				startActivityForResult(intent2, 1);
//			}
//		});
//		user_head.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				showCustomMessage();
//			}
//		});
//		user_grade_text.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				Thread thread = new Thread(new Runnable() {
//
//					@Override
//					public void run() {
//						Message msg = new Message();
//						gradeJson = HttpUtils.request(null, URLs.GRADE);
//						if (gradeJson.length() != 0 && !gradeJson.equals("0x110")) {
//							msg.what = 3;
//						} else {
//							msg.what = 0;
//						}
//
//						handler.sendMessage(msg);
//					}
//				});
//				thread.start();
//			}
//		});
//		user_grade.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				Thread thread = new Thread(new Runnable() {
//
//					@Override
//					public void run() {
//						Message msg = new Message();
//						gradeJson = HttpUtils.request(null, URLs.GRADE);
//						if (gradeJson.length() != 0 && !gradeJson.equals("0x110")) {
//							msg.what = 3;
//						} else {
//							msg.what = 0;
//						}
//
//						handler.sendMessage(msg);
//					}
//				});
//				thread.start();
//			}
//		});
//		user_score_text.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				CommonDialog commonDialog = new CommonDialog(getActivity(), R.style.ForwardDialog,
//						R.layout.score_dialog);
//				commonDialog.show();
//			}
//		});
//		user_score.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				CommonDialog commonDialog = new CommonDialog(getActivity(), R.style.ForwardDialog,
//						R.layout.score_dialog);
//				commonDialog.show();
//			}
//		});
//	}
//
//	@Override
//	public void onAttach(Activity activity) {
//		mActivity = activity;
//		super.onAttach(activity);
//	}
//
//	/**
//	 * 
//	 * @author zhoufeng
//	 * @createtime 2015-1-25 上午10:28:10
//	 * @Decription 初始化组件
//	 * 
//	 */
//	public void initView() {
//		click_face_value = (RelativeLayout) view.findViewById(R.id.click_face_value);
//		my_order_relativelayout = (RelativeLayout) view.findViewById(R.id.my_order_relativelayout);
//		msgLinLayout = (RelativeLayout) view.findViewById(R.id.my_msg_layout);
//		user_score_text = (TextView) view.findViewById(R.id.user_score_text);
//		user_grade_text = (TextView) view.findViewById(R.id.user_grade_text);
//		mPullRefreshScrollView = (PullToRefreshScrollView) view.findViewById(R.id.my_pull_refresh_scrollview);
//		mScrollView = mPullRefreshScrollView.getRefreshableView();
//		balance_click = (RelativeLayout) view.findViewById(R.id.balance_click);
//		balance_tips = (TextView) view.findViewById(R.id.balance_tips);
//		bank_card_tips = (TextView) view.findViewById(R.id.bank_card_tips);
//		face_value_tips = (TextView) view.findViewById(R.id.face_value_tips);
//		order_tips = (TextView) view.findViewById(R.id.order_tips);
//		ring_tips = (TextView) view.findViewById(R.id.ring_tips);
//		face_tips = (TextView) view.findViewById(R.id.face_tips);
//		user_name = (TextView) view.findViewById(R.id.user_name);
//		user_grade = (TextView) view.findViewById(R.id.user_grade);
//		user_score = (TextView) view.findViewById(R.id.user_score);
//		account_balance = (TextView) view.findViewById(R.id.account_balance);
//		setting = (RelativeLayout) view.findViewById(R.id.setting);
//		my_face = (RelativeLayout) view.findViewById(R.id.my_face);
//		my_community_click = (RelativeLayout) view.findViewById(R.id.my_community_click);
//		my_test_tips = (TextView) view.findViewById(R.id.my_test_tips);
//		user_head = (RoundAngleImageView) view.findViewById(R.id.user_head);
//		SharedPreferences userPreferences = getActivity().getSharedPreferences("umeng_general_config",
//				Context.MODE_PRIVATE);
//		ID = userPreferences.getString("ID", "").trim();
//	}
//
//	/**
//	 * 
//	 * @author zhoufeng
//	 * @createtime 2015-1-25 上午10:28:22
//	 * @Decription 获取服务器的数据开启线程
//	 * 
//	 */
//	public void getData() {
//		params = new ArrayList<NameValuePair>();
//		params.add(new BasicNameValuePair("memberId", ID));
//		Thread thread = new Thread(new Runnable() {
//
//			@Override
//			public void run() {
//				Message msg = new Message();
//				datajson = HttpUtils.request(params, URLs.USER_MESSAGE);
//				if (datajson.length() != 0 && !datajson.equals("0x110")) {
//					msg.what = 1;
//				} else {
//					msg.what = 0;
//				}
//				handler.sendMessage(msg);
//			}
//		});
//		thread.start();
//	}
//
//	public void getMyMessage() {
//		Thread thread = new Thread(new Runnable() {
//
//			@Override
//			public void run() {
//				Message msg = new Message();
//				datajson1 = HttpUtils.request(null, URLs.USER_MY_MESSAGE + ID);
//				if (datajson1.length() != 0 && !datajson1.equals("0x110")) {
//					msg.what = 2;
//				} else {
//					msg.what = 0;
//				}
//				handler.sendMessage(msg);
//			}
//		});
//		thread.start();
//	}
//
//	@Override
//	public void onActivityResult(int requestCode, int resultCode, Intent data) {
//		super.onActivityResult(requestCode, resultCode, data);
//		if (requestCode == 1) {
//			if (resultCode == 1) {
//				String s = data.getAction();
//				user_name.setText(s);
//			} else if (resultCode == 2) {// 用户退出登录操作
//				getActivity().finish();
//			} else if (resultCode == 3) {
//				getMyMessage();
//			} else if (resultCode == 4) {
//				getActivity().finish();
//			}
//		} else if (requestCode == SELECT_PIC_BY_PICK_PHOTO) {
//			if (data != null) {
//				startPhotoZoom(data.getData());
//			}
//		} else if (requestCode == SELECT_PIC_BY_TACK_PHOTO) {
//			File file = new File(URLs.TEMP_DIR, tempName);
//			startPhotoZoom(Uri.fromFile(file));
//		} else if (requestCode == CROP_PHOTO) {
//			/**
//			 * 非空判断大家一定要验证，如果不验证的话， 在剪裁之后如果发现不满意，要重新裁剪，丢弃
//			 * 当前功能时，会报NullException，小马只 在这个地方加下，大家可以根据不同情况在合适的 地方做判断处理类似情况
//			 * 
//			 */
//			if (data != null) {
//				Bundle extras = data.getExtras();
//				if (extras != null) {
//					Bitmap photo = extras.getParcelable("data");
//					Bitmap smallPhoto = BitmapUtils.compressImage(photo, 90, 10);
//
//					smallTempName = ID + ".jpg";
//					File tempFile = BitmapUtils.BitmapToFile(smallPhoto, URLs.TEMP_DIR, smallTempName);
//
//					UploadUtil uploadUtil = UploadUtil.getInstance();
//					uploadUtil.setOnUploadProcessListener(this); // 设置监听器监听上传状态
//
//					Map<String, String> params = new HashMap<String, String>();
//					params.put("memberId", ID);
//					params.put("businessKey", ID);
//					params.put("businessType", "MemberEntity");
//					uploadUtil.uploadFile(tempFile.getAbsolutePath(), "portrait", URLs.PORTRAIT_UPLOAD, params);
//					user_head.setImageBitmap(smallPhoto);
//				}
//			}
//		}
//	}
//
//	/**
//	 * 
//	 * @author zhonghuixiong
//	 * @createtime 2015-2-3 上午3:16:34
//	 * @Decription 自定义Dialog 参数 对话框标题
//	 */
//	private void showCustomMessage() {
//		/**
//		 * 拍照按钮事件
//		 */
//		((LinearLayout) dialog.findViewById(R.id.takephotobutton)).setOnClickListener(new OnClickListener() {
//			@Override
//			public void onClick(View v) {
//				dialog.dismiss();
//				Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
//				tempName = UUID.randomUUID().toString() + ".jpg";
//				intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(URLs.TEMP_DIR, tempName)));
//				startActivityForResult(intent, SELECT_PIC_BY_TACK_PHOTO);
//			}
//		});
//		/**
//		 * 相册按钮事件
//		 */
//		((LinearLayout) dialog.findViewById(R.id.picButton)).setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				dialog.dismiss();
//				Intent intent = new Intent(Intent.ACTION_PICK, null);
//				intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");
//				startActivityForResult(intent, SELECT_PIC_BY_PICK_PHOTO);
//			}
//		});
//		dialog.setCanceledOnTouchOutside(true);
//		dialog.show();
//	}
//
//	/**
//	 * 裁剪图片方法实现
//	 * 
//	 * @param uri
//	 */
//	public void startPhotoZoom(Uri uri) {
//		/*
//		 * 至于下面这个Intent的ACTION是怎么知道的，大家可以看下自己路径下的如下网页
//		 * yourself_sdk_path/docs/reference/android/content/Intent.html
//		 * 直接在里面Ctrl+F搜：CROP ，之前小马没仔细看过，其实安卓系统早已经有自带图片裁剪功能, 是直接调本地库的
//		 */
//		Intent intent = new Intent("com.android.camera.action.CROP");
//		intent.setDataAndType(uri, "image/*");
//		// 下面这个crop=true是设置在开启的Intent中设置显示的VIEW可裁剪
//		intent.putExtra("crop", "true");
//		// aspectX aspectY 是宽高的比例
//		intent.putExtra("aspectX", 1);
//		intent.putExtra("aspectY", 1);
//		// outputX outputY 是裁剪图片宽高
//		intent.putExtra("outputX", 80);
//		intent.putExtra("outputY", 80);
//		intent.putExtra("return-data", true);
//		startActivityForResult(intent, CROP_PHOTO);
//	}
//
//	@Override
//	public void onUploadDone(int responseCode, String message) {
//		// TODO Auto-generated method stub
//
//	}
//
//	@Override
//	public void onUploadProcess(int uploadSize) {
//		// TODO Auto-generated method stub
//
//	}
//
//	@Override
//	public void initUpload(int fileSize) {
//		// TODO Auto-generated method stub
//
//	}
//
//	/**
//	 * 下拉刷新异步任务
//	 */
//	private class GetMsgDataTask extends AsyncTask<Void, Void, String[]> {
//
//		@Override
//		protected String[] doInBackground(Void... params) {
//			// Simulates a background job.
//			getData();
//			getMyMessage();
//			return null;
//		}
//
//		@Override
//		protected void onPostExecute(String[] result) {
//			// Do some stuff here
//			// Call onRefreshComplete when the list has been refreshed.
//			mPullRefreshScrollView.onRefreshComplete();
//			super.onPostExecute(result);
//		}
//	}
//}
